
buildscript {

    ext.lwjgl_version = '3.1.6'
    ext.kotlinx_coroutines_version = '0.22.3'

    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath group: 'com.grimfox', name: 'packr-gradle-plugin', version: '1.0.0'
    }
}

plugins {
    id 'nebula.dependency-recommender' version '5.0.0'
    id 'nebula.resolution-rules' version '5.0.2'
    id 'nebula.dependency-lock' version '4.9.5'
    id 'nebula.maven-publish' version '5.1.5'
    id 'nebula.nebula-release' version '4.0.1'
    id 'org.jetbrains.kotlin.jvm' version '1.2.21'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
    id 'java'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

group = 'com.grimfox'

description 'Game Environment Creator'

import org.gradle.internal.os.OperatingSystem

switch (OperatingSystem.current()) {
    case OperatingSystem.WINDOWS:
        project.ext.lwjgl_natives = "natives-windows"
        break
    case OperatingSystem.LINUX:
        project.ext.lwjgl_natives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjgl_natives = "natives-macos"
        break
}

apply plugin: 'com.grimfox.packr-gradle-plugin'

sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}

dependencyLock {
    includeTransitives = true
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    resolutionRules group: 'com.netflix.nebula', name: 'gradle-resolution-rules', version: 'latest.release'

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: kotlinx_coroutines_version
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: kotlinx_coroutines_version
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-nio', version: kotlinx_coroutines_version

    compile group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version
    compile group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version
    compile group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version
    compile group: 'org.lwjgl', name: 'lwjgl-nfd', version: lwjgl_version
    compile group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version

    runtime group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, classifier: lwjgl_natives
    runtime group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, classifier: lwjgl_natives
    runtime group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, classifier: lwjgl_natives
    runtime group: 'org.lwjgl', name: 'lwjgl-nfd', version: lwjgl_version, classifier: lwjgl_natives
    runtime group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, classifier: lwjgl_natives
}

shadowJar {
    baseName = 'worldkit'
    classifier = null
    exclude 'META-INF/versions/**'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
    exclude 'org/lwjgl/glfw/GLFWVulcan.class'
    exclude 'org/lwjgl/glfw/GLFWVulcan$Function.class'
    exclude '*.so'
    exclude '*.dylib'
    exclude '*.sha1'
    exclude '*.git'
    exclude '*.git'
    exclude '*32.dll'
}

buildExecutables {
    executable {
        name = 'WorldKit'
        platform = 'windows64'
        jdk = file('file://D:/sandbox/oracle-jdk-9-windows64.zip')
        mainClass = 'com.grimfox.gec.Main'
        minimizeJre = 'oraclejre8'
    }
}
